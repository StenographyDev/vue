// The raw data to observe
var stats = [
  { label: 'A', value: 100 },
  { label: 'B', value: 100 },
  { label: 'C', value: 100 },
  { label: 'D', value: 100 },
  { label: 'E', value: 100 },
  { label: 'F', value: 100 }
]

// A reusable polygon graph component
Vue.component('polygraph', {
  props: ['stats'],
  template: '#polygraph-template',
  computed: {
    // a computed property for the polygon's points
 /*
 This code is mapping the value of each stat to a point on the graph.
 The x coordinate is mapped by dividing the index of that stat by the total number of stats, 
 and multiplying it by 100%.
 The y coordinate is mapped by using `valueToPoint` function which takes in two parameters 
 (the value, and its index). It returns an object with x and y coordinates. 
 The return statement then joins those coordinates into a string separated by commas.
 - generated by stenography autopilot [ 🚗👩‍✈️ ] 
 */
    points: function () {
      var total = this.stats.length
      return this.stats.map(function (stat, i) {
        var point = valueToPoint(stat.value, i, total)
        return point.x + ',' + point.y
      }).join(' ')
    }
  },
  components: {
    // a sub component for the labels
    'axis-label': {
      props: {
        stat: Object,
        index: Number,
        total: Number
      },
      template: '#axis-label-template',
      computed: {
 /*
 This code is converting the value of each stat to a point on the graph.
 The first argument is the value of that stat, which we are adding 10 to so it's not 0.
 The second argument is the index of that stat in our array, 
 which starts at 0 and increments by 1 for every element in our array.
 This allows us to know what position this particular stat will be placed on our graph.
 - generated by stenography autopilot [ 🚗👩‍✈️ ] 
 */
        point: function () {
          return valueToPoint(
            +this.stat.value + 10,
            this.index,
            this.total
          )
        }
      }
    }
  }
})

// math helper...
 /*
 This code is converting the value of each data point to a coordinate on the graph.
 The x and y coordinates are calculated using trigonometry, 
 which means that they're based off of an angle.
 The total number of points in our dataset is stored in `total`. 
 The index (`index`) represents the position of each data point within our array.
 - generated by stenography autopilot [ 🚗👩‍✈️ ] 
 */
function valueToPoint (value, index, total) {
  var x     = 0
  var y     = -value * 0.8
  var angle = Math.PI * 2 / total * index
  var cos   = Math.cos(angle)
  var sin   = Math.sin(angle)
  var tx    = x * cos - y * sin + 100
  var ty    = x * sin + y * cos + 100
  return {
    x: tx,
    y: ty
  }
}

// bootstrap the demo
new Vue({
  el: '#demo',
  data: {
    newLabel: '',
    stats: stats
  },
  methods: {
 /*
 This code is adding a new object to the stats array. 
 The label property of this object will be set to the value of the newLabel variable, 
 and its value property will be set to 100.
 - generated by stenography autopilot [ 🚗👩‍✈️ ] 
 */
    add: function (e) {
      e.preventDefault()
      if (!this.newLabel) return
      this.stats.push({
        label: this.newLabel,
        value: 100
      })
      this.newLabel = ''
    },
 /*
 This code is removing the stat from the array. 
 If there are more than 3 stats, it will remove one of them.
 If there are less than 3 stats, it will alert that you can't delete any more.
 - generated by stenography autopilot [ 🚗👩‍✈️ ] 
 */
    remove: function (stat) {
      if (this.stats.length > 3) {
        this.stats.splice(this.stats.indexOf(stat), 1)
      } else {
        alert('Can\'t delete more!')
      }
    }
  }
})
